---
- name: Deploy Real Estate Application on AWS EC2
  hosts: all
  become: yes

  vars:
    app_base: /home/ubuntu/Dream-properties
    backend_dir: "/home/ubuntu/Dream-properties/Real Estate Backend/real-estate"
    frontend_dir: /home/ubuntu/Dream-properties/real-estate-frontend

  tasks:
    # --- System Setup ---
    - name: Update apt cache and install base packages
      apt:
        update_cache: yes
        name:
          - git
          - curl
          - ca-certificates
          - gnupg
          - lsb-release
          - unzip
          - software-properties-common
          - apt-transport-https
          - nginx
        state: present

    # --- Install Java 21 ---
    - name: Install OpenJDK 21
      apt:
        name: openjdk-21-jdk
        state: present

    - name: Verify Java installation
      shell: java -version
      register: java_version
      changed_when: false

    - debug:
        var: java_version.stdout_lines

    # --- Install Maven ---
    - name: Ensure Maven is installed
      apt:
        name: maven
        state: present

    - name: Verify Maven installation
      shell: mvn -version
      register: maven_check
      changed_when: false

    - debug:
        msg: "{{ maven_check.stdout_lines }}"

    # --- Install Docker ---
    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    # --- Install Node.js 18.x ---
    - name: Install Node.js 18.x
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
        apt-get install -y nodejs
      args:
        executable: /bin/bash

    # --- Verify Versions ---
    - name: Display installed versions
      shell: |
        echo "Java: $(java -version 2>&1 | head -n 1)"
        echo "Docker: $(docker --version)"
        echo "Maven: $(mvn -version | head -n 1)"
        echo "Node: $(node -v)"
        echo "NPM: $(npm -v)"
      register: version_output
      changed_when: false

    - debug:
        var: version_output.stdout_lines

    # --- Clone GitHub Repository ---
    - name: Clone latest code from GitHub
      git:
        repo: "https://github.com/neharika005/Dream-properties.git"
        dest: "{{ app_base }}"
        version: main
        force: yes

    # --- Build Backend (Spring Boot) ---
    - name: Build backend using Maven
      shell: |
        cd "{{ backend_dir }}"
        mvn clean package -DskipTests
      args:
        executable: /bin/bash

    # --- Build Frontend (Angular) ---
    - name: Build Angular frontend
      shell: |
        cd "{{ frontend_dir }}"
        npm install
        npm run build -- --configuration production
      args:
        executable: /bin/bash

    # --- Dockerize Backend (without compose) ---
    - name: Stop old backend container if running
      shell: docker stop real_estate_backend || true && docker rm real_estate_backend || true
      args:
        executable: /bin/bash

    - name: Build backend Docker image
      shell: |
        cd "{{ backend_dir }}"
        docker build -t real_estate_backend .
      args:
        executable: /bin/bash

    - name: Run backend container
      shell: |
        docker run -d --name real_estate_backend -p 8080:8080 real_estate_backend
      args:
        executable: /bin/bash

    # --- Nginx Reverse Proxy Setup ---
    - name: Create Nginx configuration for reverse proxy
      copy:
        dest: /etc/nginx/sites-available/real_estate.conf
        content: |
          server {
              listen 80;
              server_name _;

              location /api/ {
                  proxy_pass http://localhost:8080/;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }

              location / {
                  root /home/ubuntu/Dream-properties/real-estate-frontend/dist/real-estate-frontend/browser;
                  index index.html;
                  try_files $uri /index.html;
              }
          }

    - name: Enable custom Nginx site
      file:
        src: /etc/nginx/sites-available/real_estate.conf
        dest: /etc/nginx/sites-enabled/real_estate.conf
        state: link
        force: yes

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Test Nginx configuration
      command: nginx -t

    - name: Restart Nginx service
      service:
        name: nginx
        state: restarted
        enabled: yes

    - name: Verify Nginx status
      shell: systemctl status nginx --no-pager
      register: nginx_status
      changed_when: false

    - debug:
        var: nginx_status.stdout_lines
