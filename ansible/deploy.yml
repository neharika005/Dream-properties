---
- name: Deploy Real Estate Application
  hosts: real_estate
  become: yes

  vars:
    backend_dir: "/home/ubuntu/Dream-properties/Real Estate Backend/real-estate"
    frontend_build_dir: "/home/ubuntu/Dream-properties/real-estate-frontend/dist/real-estate-frontend/browser"
    backend_jar: "real-estate-0.0.1-SNAPSHOT.jar"
    backend_image: "real_estate_backend"
    frontend_image: "real_estate_frontend"

  tasks:
    - name: Ensure Docker and Nginx are installed
      apt:
        name:
          - docker.io
          - nginx
        state: present
        update_cache: yes

    - name: Stop and remove existing containers
      shell: |
        docker stop {{ backend_image }} {{ frontend_image }} 2>/dev/null || true
        docker rm {{ backend_image }} {{ frontend_image }} 2>/dev/null || true

    - name: Remove Nginx default site
      file:
        path: /var/www/html
        state: absent

    - name: Copy frontend build to Nginx directory
      copy:
        src: "{{ frontend_build_dir }}/"
        dest: /var/www/html/
        owner: www-data
        group: www-data
        mode: '0755'
      notify: Restart Nginx

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
      listen: Restart Nginx

    - name: Build backend Docker image
      community.docker.docker_image:
        name: "{{ backend_image }}"
        build:
          path: "{{ backend_dir }}"
        source: build

    - name: Run backend container
      community.docker.docker_container:
        name: "{{ backend_image }}"
        image: "{{ backend_image }}"
        state: started
        restart_policy: always
        ports:
          - "8080:8080"
        env:
          SPRING_PROFILES_ACTIVE: "prod"

    - name: Verify backend container is running
      shell: docker ps | grep {{ backend_image }}
      register: backend_status
      changed_when: false

    - debug:
        msg: "✅ Backend deployed successfully and running on port 8080"

    - name: Verify Nginx frontend is accessible
      uri:
        url: http://localhost
        return_content: yes
      register: frontend_response
      failed_when: "'Welcome to nginx!' in frontend_response.content"

    - debug:
        msg: "✅ Frontend deployed successfully and served by Nginx"
